generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = env("CHATMOKO_URI")
}

enum Role {
  ADMIN
  USER
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id                String    @id @default(uuid()) @map("_id")
  email             String    @unique
  name              String
  image             String?
  emailVerified     DateTime?
  phone             String?
  password          String?
  first_name        String?
  middle_name       String?
  last_name         String?
  verification_code String?
  is_active         Boolean   @default(false)
  is_reported       Boolean   @default(false)
  is_blocked        Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime?
  role              Role      @default(USER) // User role
  account           Account[]
  Session           Session[]
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}
